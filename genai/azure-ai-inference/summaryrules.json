[
    {
        "name": "Online-Experimentation-GenAI-AzureAIInference",
        "description": "Summary rule definition for non-eval GenAI metrics. Appropriate for use to convert metrics from spans logged by OpenTelemetry instrumentation through Azure.AI.Inference SDK with OpenTelemetry extension.",
        "query": "let _targetid = \"TargetingId\"; AppDependencies| where Properties has _targetid| extend TargetingId = tostring(parse_json(Properties[_targetid]))| distinct TargetingId, Id, ParentId, OperationId| join kind = inner (AppDependencies| where Properties has \"gen_ai.operation.name\"| extend props = parse_json(Properties)| extend Name = strcat(\"azureaiinference.\",replace_regex(tostring(props[\"gen_ai.operation.name\"]), \"[ /]+\", \"_\")) | extend Properties = bag_merge(Properties, pack(\"oe.tokens\", toint(props[\"gen_ai.usage.input_tokens\"]) + toint(props[\"gen_ai.usage.output_tokens\"]), \"DurationMS\", DurationMs))| summarize take_any(TimeGenerated, Name, Properties,OperationId, ParentId, AppRoleName, AppRoleInstance, ClientType, ClientModel, ClientOS, ClientIP, ClientCity, ClientStateOrProvince, ClientCountryOrRegion, ClientBrowser, ResourceGUID, IKey, SDKVersion, ItemCount,Type, _ResourceId, TenantId, SourceSystem) by x =strcat(Id, TimeGenerated)| project-away x| union (AppTraces| where Message has \"gen_ai\"| summarize count(), min(TimeGenerated), take_any(AppRoleName, AppRoleInstance, ClientType, ClientModel, ClientOS, ClientIP, ClientCity, ClientStateOrProvince, ClientCountryOrRegion, ClientBrowser, ResourceGUID, IKey, SDKVersion, ItemCount, Type, _ResourceId, TenantId, SourceSystem)  by Message, ParentId, OperationId| summarize MessageCount = sum(count_), DistinctMessageTypes = count(), Properties = make_bag(pack(Message, count_)),TimeGenerated = min(min_TimeGenerated), take_any(AppRoleName, AppRoleInstance, ClientType, ClientModel, ClientOS, ClientIP, ClientCity, ClientStateOrProvince, ClientCountryOrRegion, ClientBrowser, ResourceGUID, IKey, SDKVersion, ItemCount, Type, _ResourceId, TenantId, SourceSystem) by ParentId, OperationId| extend Properties = bag_merge(Properties, pack(\"gen_ai.custom.messagecount\", MessageCount, \"gen_ai.custom.distinctmessagetypes\", DistinctMessageTypes))| extend Name = \"azureaiinference.message_counts\"| project-away MessageCount, DistinctMessageTypes)) on $left.Id == $right.ParentId | extend Properties = bag_merge(Properties, pack(\"TargetingId\",TargetingId))| project-away TargetingId, ParentId1, OperationId1, Id"
    }
]